<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <!--注册log4net（目前注释掉也可以正常使用）-->
  <configSections>
    <section name="log4net" type="log4net.Config.IgnoreSectionHandler"/>
  </configSections>

  <log4net> 
    <!-- 日志默认值节点 -->
    <root>
      <!-- 默认日志对象级别 -->
      <!--(高) OFF > FATAL > ERROR > WARN > INFO > DEBUG > ALL (低) -->
      <level value="all" />
      <!-- 默认日志记录方式 ref为<appender>节点的name属性--> 
      <appender-ref ref="RollingFileAppender_Error"/>
      <appender-ref ref="RollingFileAppender_Info"/>
      <appender-ref ref="RollingFileAppender_Warn"/>
    </root> 
 
    <!-- 文件形式记录日志-Error -->
    <appender name="RollingFileAppender_Error" type="log4net.Appender.RollingFileAppender">
      <!--只记录Info级别的日志-->
      <filter type="log4net.Filter.LevelMatchFilter">
        <levelToMatch value="Error" />
      </filter>
      <filter type="log4net.Filter.DenyAllFilter" />
      <!--日志文件路径,按文件大小方式输出时在这里指定文件名，并且前面的日志按天在文件名后自动添加当天日期形成文件-->
      <param name= "File" value= "Logs\\Errors\\"/>
      <!--是否是向文件中追加日志-->
      <param name= "AppendToFile" value= "true"/>
      <!--记录日志写入文件时，不锁定文本文件-->
      <!--<lockingModel type="log4net.Appender.FileAppender+MinimalLock" />-->
      <!--Unicode编码-->
      <!--<Encoding value="UTF-8" />-->
      <!--最多产生的日志文件数，value="－1"为不限文件数-->
      <!--<param name="MaxSizeRollBackups" value="10" />-->
      <!--log保留天数-->
      <param name= "MaxSizeRollBackups" value= "100"/>
      <!--日志文件名是否是固定不变的（是否只写到一个文件中）-->
      <param name= "StaticLogFileName" value= "false"/>
      <!--按日期产生文件夹，文件名［在日期方式与混合方式下使用］日志文件名格式为:2008-08-31.log -->
      <param name= "DatePattern" value= "yyyy-MM-dd&quot;.log&quot;"/>
      <!--<param name="DatePattern" value="yyyy-MM-dd/"-ReflectionLayout.log=""""  />
      <param name="DatePattern" value="yyyyMMdd/yyyyMMdd"-TimerServer.log""  />
      <param name="DatePattern" value="yyyyMMdd/"TimerServer/TimerServer.log""  />-->
      <!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
      <param name="RollingStyle" value="Date" />
      <!--每个文件的大小。只在混合方式与文件大小方式下使用，超出大小的在文件名后自动增加1重新命名-->
      <param name="maximumFileSize" value="2000KB" />
      <!--记录的格式。-->
      <layout type="log4net.Layout.PatternLayout">
      
        <conversionPattern value="%n＝＝＝＝＝＝＝＝＝＝
              %n【日志级别】%-5level
              %n【记录时间】%date
              %n【线程编号】[%thread]
              %n【执行时间】[%r]毫秒
              %n【出错文件】%F
              %n【出错行号】%L
              %n【出错的类】%logger 属性[%property{NDC}]
              %n【错误描述】%message
              %n【错误详情】"/>
      </layout>
    </appender>
   

    <!-- 文件形式记录日志-Info -->
    <appender name="RollingFileAppender_Info" type="log4net.Appender.RollingFileAppender">
      <!--只记录Info级别的日志-->
      <filter type="log4net.Filter.LevelMatchFilter">
        <levelToMatch value="Info" />
      </filter>
      <filter type="log4net.Filter.DenyAllFilter" />
      <!--日志文件路径,按文件大小方式输出时在这里指定文件名，并且前面的日志按天在文件名后自动添加当天日期形成文件-->
      <param name= "File" value= "Logs\\Info\\"/>
      <!--是否是向文件中追加日志-->
      <param name= "AppendToFile" value= "true"/>
      <!--记录日志写入文件时，不锁定文本文件-->
      <!--<lockingModel type="log4net.Appender.FileAppender+MinimalLock" />-->
      <!--Unicode编码-->
      <!--<Encoding value="UTF-8" />-->
      <!--最多产生的日志文件数，value="－1"为不限文件数-->
      <!--<param name="MaxSizeRollBackups" value="10" />-->
      <!--log保留天数-->
      <param name= "MaxSizeRollBackups" value= "100"/>
      <!--日志文件名是否是固定不变的（是否只写到一个文件中）-->
      <param name= "StaticLogFileName" value= "false"/>
      <!--按日期产生文件夹，文件名［在日期方式与混合方式下使用］日志文件名格式为:2008-08-31.log -->
      <param name= "DatePattern" value= "yyyy-MM-dd&quot;.log&quot;"/>
      <!--<param name="DatePattern" value="yyyy-MM-dd/"-ReflectionLayout.log=""""  />
      <param name="DatePattern" value="yyyyMMdd/yyyyMMdd"-TimerServer.log""  />
      <param name="DatePattern" value="yyyyMMdd/"TimerServer/TimerServer.log""  />-->
      <!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
      <param name="RollingStyle" value="Date" />
      <!--每个文件的大小。只在混合方式与文件大小方式下使用，超出大小的在文件名后自动增加1重新命名-->
      <param name="maximumFileSize" value="2000KB" />
      <!--记录的格式。-->
      <layout type="log4net.Layout.PatternLayout">  
        <conversionPattern value="%n＝＝＝＝＝＝＝＝＝＝
              %n【日志级别】%-5level
              %n【记录时间】%date
              %n【线程编号】[%thread]
              %n【执行时间】[%r]毫秒 
              %n【执行的类】%logger 属性[%property{NDC}]
              %n【提示信息】%message"/>
      </layout>
    </appender>


    <!-- 文件形式记录日志-Info -->
    <appender name="RollingFileAppender_Warn" type="log4net.Appender.RollingFileAppender">
      <!--只记录Info级别的日志-->
      <filter type="log4net.Filter.LevelMatchFilter">
        <levelToMatch value="Warn" />
      </filter>
      <filter type="log4net.Filter.DenyAllFilter" />
      <!--日志文件路径,按文件大小方式输出时在这里指定文件名，并且前面的日志按天在文件名后自动添加当天日期形成文件-->
      <param name= "File" value= "Logs\\Warn\\"/>
      <!--是否是向文件中追加日志-->
      <param name= "AppendToFile" value= "true"/>
      <!--记录日志写入文件时，不锁定文本文件-->
      <!--<lockingModel type="log4net.Appender.FileAppender+MinimalLock" />-->
      <!--Unicode编码-->
      <!--<Encoding value="UTF-8" />-->
      <!--最多产生的日志文件数，value="－1"为不限文件数-->
      <!--<param name="MaxSizeRollBackups" value="10" />-->
      <!--log保留天数-->
      <param name= "MaxSizeRollBackups" value= "100"/>
      <!--日志文件名是否是固定不变的（是否只写到一个文件中）-->
      <param name= "StaticLogFileName" value= "false"/>
      <!--按日期产生文件夹，文件名［在日期方式与混合方式下使用］日志文件名格式为:2008-08-31.log -->
      <param name= "DatePattern" value= "yyyy-MM-dd&quot;.log&quot;"/>
      <!--<param name="DatePattern" value="yyyy-MM-dd/"-ReflectionLayout.log=""""  />
      <param name="DatePattern" value="yyyyMMdd/yyyyMMdd"-TimerServer.log""  />
      <param name="DatePattern" value="yyyyMMdd/"TimerServer/TimerServer.log""  />-->
      <!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
      <param name="RollingStyle" value="Date" />
      <!--每个文件的大小。只在混合方式与文件大小方式下使用，超出大小的在文件名后自动增加1重新命名-->
      <param name="maximumFileSize" value="2000KB" />
      <!--记录的格式。-->
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%n＝＝＝＝＝＝＝＝＝＝
              %n【日志级别】%-5level
              %n【记录时间】%date
              %n【线程编号】[%thread]
              %n【执行时间】[%r]毫秒 
              %n【执行的类】%logger 属性[%property{NDC}]
              %n【提示信息】%message"/>
      </layout>
    </appender>

  </log4net>
</configuration>